<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>远芳</title>
  
  <subtitle>算法小亭</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yuanfang.tech/"/>
  <updated>2019-07-24T17:48:58.479Z</updated>
  <id>https://yuanfang.tech/</id>
  
  <author>
    <name>Mengfei Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>poj3268</title>
    <link href="https://yuanfang.tech/2019/07/25/poj3268.html"/>
    <id>https://yuanfang.tech/2019/07/25/poj3268.html</id>
    <published>2019-07-24T17:39:39.000Z</published>
    <updated>2019-07-24T17:48:58.479Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj3268,最短路变形，有向图，求来回距离<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=3268" target="_blank" rel="noopener">http://poj.org/problem?id=3268</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给出n个点和m条边，接着是m条边，代表从牛a到牛b需要花费c时间，现在所有牛要到牛x那里去参加聚会，并且所有牛参加聚会后还要回来，给你牛x，除了牛x之外的牛，他们都有一个参加聚会并且回来的最短时间，从这些最短时间里找出一个最大值输出。</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>首先可以想到，所有牛到X的最短距离，那么将X作为起点就可以通过dijstra知道X到其他点的距离。即返程的距离。</p><p>只需要转置矩阵一下，就可以求出其他点到X的距离了。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 99999999</span></span><br><span class="line"><span class="keyword">int</span> e[<span class="number">1010</span>][<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> book[<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> sum[<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> n,m,x;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijstra</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)book[i]=<span class="number">0</span>;</span><br><span class="line">book[x]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)dis[i]=e[x][i];</span><br><span class="line">dis[x]=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> min=inf,temp,v;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(book[j]==<span class="number">0</span>&amp;&amp;dis[j]&lt;min)</span><br><span class="line">&#123;</span><br><span class="line">min=dis[j];</span><br><span class="line">temp=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">book[temp]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(v=<span class="number">1</span>;v&lt;=n;v++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(e[temp][v]&lt;inf)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dis[v]&gt;dis[temp]+e[temp][v])dis[v]=dis[temp]+e[temp][v];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">sum[i]=sum[i]+dis[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b,c,i,j;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;x);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">e[i][j]=inf;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">sum[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">e[a][b]=c;</span><br><span class="line">&#125;</span><br><span class="line">dijstra();</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(j=i;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">temp=e[i][j];</span><br><span class="line">e[i][j]=e[j][i];</span><br><span class="line">e[j][i]=temp;</span><br><span class="line">&#125;</span><br><span class="line">dijstra();</span><br><span class="line"><span class="keyword">int</span> max=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i==x)<span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sum[i]&gt;max)max=sum[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,max);</span><br><span class="line">&#125; <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 99999999</span></span><br><span class="line"><span class="keyword">int</span> e[<span class="number">1010</span>][<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> dis[<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> book[<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> sum[<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> n,m,x;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijstra</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)book[i]=<span class="number">0</span>;</span><br><span class="line">book[x]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)dis[i]=e[x][i];</span><br><span class="line">dis[x]=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> min=inf,temp,v;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(book[j]==<span class="number">0</span>&amp;&amp;dis[j]&lt;min)</span><br><span class="line">&#123;</span><br><span class="line">min=dis[j];</span><br><span class="line">temp=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">book[temp]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(v=<span class="number">1</span>;v&lt;=n;v++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(e[temp][v]&lt;inf)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dis[v]&gt;dis[temp]+e[temp][v])dis[v]=dis[temp]+e[temp][v];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">sum[i]=sum[i]+dis[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b,c,i,j;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;x);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">e[i][j]=inf;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">sum[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">e[a][b]=c;</span><br><span class="line">&#125;</span><br><span class="line">dijstra();</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(j=i;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">temp=e[i][j];</span><br><span class="line">e[i][j]=e[j][i];</span><br><span class="line">e[j][i]=temp;</span><br><span class="line">&#125;</span><br><span class="line">dijstra();</span><br><span class="line"><span class="keyword">int</span> max=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i==x)<span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sum[i]&gt;max)max=sum[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,max);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj3268,最短路变形，有向图，求来回距离&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="dijstra" scheme="https://yuanfang.tech/tags/dijstra/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
  </entry>
  
  <entry>
    <title>poj1797</title>
    <link href="https://yuanfang.tech/2019/07/24/poj1797.html"/>
    <id>https://yuanfang.tech/2019/07/24/poj1797.html</id>
    <published>2019-07-24T12:00:23.000Z</published>
    <updated>2019-07-24T17:50:33.553Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj1797,最短路变形<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=1797" target="_blank" rel="noopener">http://poj.org/problem?id=1797</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>青蛙那题的变形版本。</p><p>输入T组，每组x个点，y条边。</p><p>接下来y行分别是a到b的边的权重。</p><p>求1到x的所有边中最大的最小边权重。（2333读懂题目就会了）</p><p>形象一点理解就是权重为道路的载重量，这题求的就是一辆卡车从1开到x，卡车最多可以载重多少。当然取决于一条路上载重量最低的那条路。输出那条路的载重量。</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>思路：反过来查找dis[]中最大的，那么就能确定1到那个点的最大权重了，然后进行。。松弛？</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>Dijstra变形：一开始读错题了导致代码写丑了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 99999999</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">funmin</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a&gt;b)<span class="keyword">return</span> b;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">funmax</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a&gt;b)<span class="keyword">return</span> a;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> e[<span class="number">1010</span>][<span class="number">1010</span>],book[<span class="number">1010</span>],dis[<span class="number">1010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,count=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> i,j,x,y,a,b,c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=x;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=x;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i==j)e[i][j]=<span class="number">0</span>;</span><br><span class="line">e[i][j]=-inf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(y--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">e[a][b]=c;</span><br><span class="line">e[b][a]=c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=x;i++)</span><br><span class="line">&#123;</span><br><span class="line">dis[i]=e[<span class="number">1</span>][i];</span><br><span class="line">book[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">dis[<span class="number">1</span>]=<span class="number">0</span>;book[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;x;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> max=-inf;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">2</span>;j&lt;=x;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dis[j]&gt;max&amp;&amp;book[j]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">max=dis[j];</span><br><span class="line">temp=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">book[temp]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> v;</span><br><span class="line"><span class="keyword">for</span>(v=<span class="number">2</span>;v&lt;=x;v++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(e[temp][v]&gt;<span class="number">0</span>&amp;&amp;book[v]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">dis[v]=funmax(dis[v],funmin(e[temp][v],dis[temp]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Scenario #%d:\n%d\n\n"</span>,count++,dis[x]);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj1797,最短路变形&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="dijstra" scheme="https://yuanfang.tech/tags/dijstra/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
  </entry>
  
  <entry>
    <title>poj2253</title>
    <link href="https://yuanfang.tech/2019/07/24/poj2253.html"/>
    <id>https://yuanfang.tech/2019/07/24/poj2253.html</id>
    <published>2019-07-24T09:42:08.000Z</published>
    <updated>2019-07-24T17:50:05.753Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj2253,最短路变形<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=2253" target="_blank" rel="noopener">http://poj.org/problem?id=2253</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>第一行T，告诉你有T个点，下面T行是它们的坐标</p><p>有两只青蛙，T的第一个是a青蛙坐标，第二个是b青蛙坐标</p><p>求a青蛙到b青蛙那里的所有路中最短的 路径中最大的边</p><p><img src="poj2253\2253.png" alt="2253"></p><p>例：如图所示，1到3距离为1，2到3距离为1，1到2距离为2，那么根据题意，1-3-2最长的边是1，1-2最长的是2，所以输出1。</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>输出有俩\n</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>Dijstra改一改：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 99999999</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">funmin</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a&gt;b)<span class="keyword">return</span> b;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">funmax</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a&gt;b)<span class="keyword">return</span> a;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,count=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> x[<span class="number">210</span>],y[<span class="number">210</span>],book[<span class="number">210</span>];</span><br><span class="line"><span class="keyword">double</span> e[<span class="number">210</span>][<span class="number">210</span>],dis[<span class="number">210</span>];</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=t;i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x[i],&amp;y[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=t;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=t;j++)</span><br><span class="line">e[i][j]=inf;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;t;i++)</span><br><span class="line"><span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;=t;j++)</span><br><span class="line">&#123;</span><br><span class="line">e[i][j]=e[j][i]=<span class="built_in">sqrt</span>(<span class="keyword">double</span>(x[i]-x[j])*(x[i]-x[j])+<span class="keyword">double</span>(y[i]-y[j])*(y[i]-y[j]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=t;i++)</span><br><span class="line">&#123;</span><br><span class="line">dis[i]=e[<span class="number">1</span>][i];</span><br><span class="line">book[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">dis[<span class="number">1</span>]=<span class="number">0</span>;book[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;t;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">double</span> min=inf;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=t;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dis[j]&lt;min&amp;&amp;book[j]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">min=dis[j];</span><br><span class="line">temp=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">book[temp]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> v;</span><br><span class="line"><span class="keyword">for</span>(v=<span class="number">1</span>;v&lt;=t;v++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(e[temp][v]&lt;inf)</span><br><span class="line">&#123;</span><br><span class="line">dis[v]=funmin(dis[v],funmax(e[temp][v],dis[temp]));<span class="comment">//比较经过temp点松弛后的路线中最长跳跃距离和dis[v]的距离</span></span><br><span class="line"><span class="comment">//if(e[temp][v]+dis[temp]&lt;dis[v])dis[v]=dis[temp]+e[temp][v];</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Scenario #%d\nFrog Distance = %.3lf\n\n"</span>,count++,dis[<span class="number">2</span>]);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj2253,最短路变形&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="dijstra" scheme="https://yuanfang.tech/tags/dijstra/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
  </entry>
  
  <entry>
    <title>poj2387</title>
    <link href="https://yuanfang.tech/2019/07/24/poj2387.html"/>
    <id>https://yuanfang.tech/2019/07/24/poj2387.html</id>
    <published>2019-07-24T08:15:07.000Z</published>
    <updated>2019-07-24T12:51:59.682Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>板子题，最短路，poj2387<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=2387" target="_blank" rel="noopener">http://poj.org/problem?id=2387</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>第一行T组数据，N个顶点</p><p>之后T行告诉你a到b的距离c</p><p>求到n的最短路径</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>有重边 \ \两点之间的路未必只有一条</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>Dijstra：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 99999999</span></span><br><span class="line"><span class="keyword">int</span> e[<span class="number">1010</span>][<span class="number">1010</span>],dis[<span class="number">1010</span>],book[<span class="number">1010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,t,a,b,c,i,j;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;t,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i==j)e[i][j]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> e[i][j]=inf; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line"><span class="keyword">if</span>(e[a][b]&gt;c)</span><br><span class="line">&#123;</span><br><span class="line">e[a][b]=c;</span><br><span class="line">e[b][a]=c;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">dis[i]=e[<span class="number">1</span>][i];</span><br><span class="line">book[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">dis[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">book[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> min=inf;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dis[j]&lt;min&amp;&amp;book[j]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">min=dis[j];</span><br><span class="line">temp=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">book[temp]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> v;</span><br><span class="line"><span class="keyword">for</span>(v=<span class="number">1</span>;v&lt;=n;v++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(e[temp][v]&lt;inf)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dis[v]&gt;dis[temp]+e[temp][v])dis[v]=dis[temp]+e[temp][v];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,dis[n]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;板子题，最短路，poj2387&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="dijstra" scheme="https://yuanfang.tech/tags/dijstra/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
  </entry>
  
  <entry>
    <title>dijstra</title>
    <link href="https://yuanfang.tech/2019/07/23/dijstra.html"/>
    <id>https://yuanfang.tech/2019/07/23/dijstra.html</id>
    <published>2019-07-23T06:09:13.000Z</published>
    <updated>2019-07-23T08:33:50.718Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Dijstra算法"><a href="#Dijstra算法" class="headerlink" title="Dijstra算法"></a>Dijstra算法</h2><p>博客初建，先记录一个基础的单源最短路算法，Dijstra。</p><p>复杂度：O（N²）</p><p><img src="http://pv35325dx.bkt.clouddn.com/lalala.gif" alt="lalala"></p><a id="more"></a><p>例如求1到各个顶点的最短路径。</p><p><img src="http://pv35325dx.bkt.clouddn.com/1563866213798.png" alt="1"></p><p>首先考虑图的存储问题，使用二维数组e来进行存储各个点之间的边的长度。</p><p><img src="http://pv35325dx.bkt.clouddn.com/1563862729194.png" alt="2"></p><p>然后创建一个一维数组dis来存储1号顶点到其余各个顶点的初始路程。</p><p><img src="http://pv35325dx.bkt.clouddn.com/1563862773804.png" alt="3"></p><p>此时dis数组中的值称为最短路程的“估计值”。</p><p>既然是找最短路，那么根据dis可以寻找到离点1最近的顶点是2。</p><p>那么dis[2]的值就变成了“确定值”。即点1到点2的最短距离就是dis[2]的值。</p><p>既然选择了2号顶点，那就继续看2号顶点的几条出边。有2-3和2-4这两条，先讨论2-3能否让1号顶点到3号顶点的路程变短，即比较dis[3]和dis[2]+e[2] [3]的大小。</p><p>dis[3]=12,dis[2]+e[2] [3]=10,dis[3]&gt;dis[2]+e[2] [3],所以可以通过1-2-3这样缩短1-3的距离，因此dis[3]更新为10。这个过程专业点称为“松弛”。</p><p>同理，dis[2]+e[2] [4]&lt;dis[4],dis[4]的值可以松弛为4。</p><p>这样2号顶点的所有出边就都松弛完了。松弛之后的dis数组为：</p><p><img src="http://pv35325dx.bkt.clouddn.com/1563863527940.png" alt="5"></p><p>接下来以此类推，在剩下的3，4，5，6号顶点中选出离1最近的顶点。</p><p>通过dis数组可以发现最近的顶点是4。</p><p>dis[4]的值变成“确定值”。</p><p>然后继续对4号顶点的所有出边进行松弛。松弛之后的dis数组为：</p><p><img src="http://pv35325dx.bkt.clouddn.com/1563863664903.png" alt="6"></p><p>以此类推，在剩下的3，5，6号顶点中，选出离1号最近的顶点。这次选择3号顶点。</p><p>dis[3]的值变成“确定值”。</p><p>对3号顶点的所有出边进行松弛。松弛之后的dis数组为：</p><p><img src="http://pv35325dx.bkt.clouddn.com/1563863742582.png" alt="7"></p><p>在剩下的5，6号顶点中，选出离1号最近的顶点。选择5号。</p><p>dis[5]的值变成“确定值”。</p><p>对5号顶点的所有出边进行松弛。松弛之后的dis数组为：</p><p><img src="http://pv35325dx.bkt.clouddn.com/1563863819140.png" alt="8"></p><p>最后选择6号。</p><p>dis[6]的值变成“确定值”。</p><p>最后对6号顶点的所有出边进行松弛。因为此例6号没有出边，因此不用处理。</p><p>至此，dis数组中所有的值都已经从“估计值”变成了“确定值”。</p><p>最终dis数组如下，这便是1号顶点到各个顶点的最短路径。</p><p><img src="http://pv35325dx.bkt.clouddn.com/1563863951516.png" alt="10"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>算法基本思想：每次都找离源点最近的顶点，然后以该顶点为中心进行扩展，最终得到源点到其余所有点的最短路径。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 101 <span class="comment">//最大顶点数 </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> e[MAXN][MAXN],dis[MAXN];</span><br><span class="line"><span class="keyword">int</span> temp,v,i,j,a,b,c,n,m,min;</span><br><span class="line"><span class="keyword">int</span> inf=<span class="number">99999999</span>;<span class="comment">//存储一个认为正无穷的值</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);<span class="comment">//n个顶点，m条边</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line"><span class="keyword">if</span>(i==j)e[i][j]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> e[i][j]=inf;</span><br><span class="line"><span class="comment">//初始化 </span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">e[a][b]=c;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//读入边</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">dis[i]=e[<span class="number">1</span>][i];</span><br><span class="line"><span class="comment">//初始化dis数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> book[MAXN];<span class="comment">//在代码中，需要用一个book数组进行标记估计值还是确定值</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)book[i]=<span class="number">0</span>;</span><br><span class="line">book[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Dijstra算法核心语句</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">min=inf;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(book[j]==<span class="number">0</span> &amp;&amp; dis[j]&lt;min)</span><br><span class="line">&#123;</span><br><span class="line">min=dis[j];</span><br><span class="line">temp=j;<span class="comment">//记录最小的顶点号 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">book[temp]=<span class="number">1</span>;<span class="comment">//dis[temp]变成确定值</span></span><br><span class="line"><span class="keyword">for</span>(v=<span class="number">1</span>;v&lt;=n;v++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(e[temp][v]&lt;inf)<span class="comment">//进行松弛 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dis[temp]+e[temp][v]&lt;dis[v])</span><br><span class="line">dis[v]=dis[temp]+e[temp][v];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,dis[i]);<span class="comment">//输出结果 </span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Dijstra算法&quot;&gt;&lt;a href=&quot;#Dijstra算法&quot; class=&quot;headerlink&quot; title=&quot;Dijstra算法&quot;&gt;&lt;/a&gt;Dijstra算法&lt;/h2&gt;&lt;p&gt;博客初建，先记录一个基础的单源最短路算法，Dijstra。&lt;/p&gt;
&lt;p&gt;复杂度：O（N²）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://pv35325dx.bkt.clouddn.com/lalala.gif&quot; alt=&quot;lalala&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="algorithm" scheme="https://yuanfang.tech/categories/algorithm/"/>
    
    
      <category term="dijstra" scheme="https://yuanfang.tech/tags/dijstra/"/>
    
  </entry>
  
  <entry>
    <title>my first blog</title>
    <link href="https://yuanfang.tech/2019/07/22/my-first.html"/>
    <id>https://yuanfang.tech/2019/07/22/my-first.html</id>
    <published>2019-07-22T13:16:19.000Z</published>
    <updated>2019-07-23T13:53:12.710Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br><img src="http://pv35325dx.bkt.clouddn.com/first.jpg" alt="first"><p></p><a id="more"></a><p>经过两天的搭建，终于好像搭好了！安装上了node,git,hexo.然后扔GitHub然后买了个域名。编辑md软件用的Typora，蛮好用。</p><p>域名yuanfang.tech，既有远方，又有远芳的意思，还可以记成元芳，给别人记应该很好记23333（没办法lmf太贵了）。本来还想起个英文的，但算了，中文更写意。tech很有dalao的感觉。</p><p>计划以后写题啊算法啥的都往上放。</p><p>就先这样，功能慢慢加，日后完善。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;&lt;img src=&quot;http://pv35325dx.bkt.clouddn.com/first.jpg&quot; alt=&quot;first&quot;&gt;&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="somethings" scheme="https://yuanfang.tech/categories/somethings/"/>
    
    
      <category term="test" scheme="https://yuanfang.tech/tags/test/"/>
    
  </entry>
  
</feed>
