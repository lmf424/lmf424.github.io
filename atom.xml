<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>远芳</title>
  
  <subtitle>Yo quiero vivir</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yuanfang.tech/"/>
  <updated>2019-08-15T19:47:29.880Z</updated>
  <id>https://yuanfang.tech/</id>
  
  <author>
    <name>Mengfei Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>poj1426</title>
    <link href="https://yuanfang.tech/2019/08/16/poj1426.html"/>
    <id>https://yuanfang.tech/2019/08/16/poj1426.html</id>
    <published>2019-08-15T19:42:02.000Z</published>
    <updated>2019-08-15T19:47:29.880Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj1426,bfs/dfs/bfs+同余模定理<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=1426" target="_blank" rel="noopener">http://poj.org/problem?id=1426</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给出一个整数n，(1 &lt;= n &lt;= 200)。求出任意一个它的倍数m，要求m必须只由十进制的’0’或’1’组成。</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>基础是1，入口为x10和x10+1</p><p>bfs:360ms</p><p>dfs:141ms</p><p>dfs+同余模定理:32ms(大佬tql)</p><p>详解：<a href="https://blog.csdn.net/lyy289065406/article/details/6647917" target="_blank" rel="noopener">https://blog.csdn.net/lyy289065406/article/details/6647917</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> flag;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> t,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">1</span>)<span class="keyword">return</span> ;</span><br><span class="line"><span class="keyword">if</span>(t%n==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%llu\n"</span>,t);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">19</span>)<span class="keyword">return</span> ;</span><br><span class="line">dfs(t*<span class="number">10</span>,k+<span class="number">1</span>);</span><br><span class="line">dfs(t*<span class="number">10</span>+<span class="number">1</span>,k+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())q.pop();</span><br><span class="line">q.push(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">k=q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">if</span>(k%n==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%llu\n"</span>,k);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(k*<span class="number">10</span>&lt;=<span class="number">1e19</span>)</span><br><span class="line">q.push(k*<span class="number">10</span>);</span><br><span class="line">q.push(k*<span class="number">10</span>+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF&amp;&amp;n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//dfs(1,0);</span></span><br><span class="line">bfs(n);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dalao的代码:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">int</span> mod[<span class="number">524286</span>];  <span class="comment">//保存每次mod n的余数</span></span><br><span class="line">                  <span class="comment">//由于198的余数序列是最长的</span></span><br><span class="line">                  <span class="comment">//经过反复二分验证，436905是能存储198余数序列的最少空间</span></span><br><span class="line">                  <span class="comment">//但POJ肯定又越界测试了...524286是AC的最低下限，不然铁定RE</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!n)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"> </span><br><span class="line">mod[<span class="number">1</span>]=<span class="number">1</span>%n;  <span class="comment">//初始化，n倍数的最高位必是1</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;mod[i<span class="number">-1</span>]!=<span class="number">0</span>;i++)  <span class="comment">//利用同余模定理，从前一步的余数mod[i/2]得到下一步的余数mod[i]</span></span><br><span class="line">mod[i]=(mod[i/<span class="number">2</span>]*<span class="number">10</span>+i%<span class="number">2</span>)%n;</span><br><span class="line">             <span class="comment">//mod[i/2]*10+i%2模拟了BFS的双入口搜索</span></span><br><span class="line">             <span class="comment">//当i为偶数时，+0，即取当前位数字为0  。为奇数时，则+1,即取当前位数字为1</span></span><br><span class="line"> </span><br><span class="line">i--;</span><br><span class="line"><span class="keyword">int</span> pm=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i)</span><br><span class="line">&#123;</span><br><span class="line">mod[pm++]=i%<span class="number">2</span>;   <span class="comment">//把*10操作转化为%2操作，逆向求倍数的每一位数字</span></span><br><span class="line">i/=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(pm)</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;mod[--pm];  <span class="comment">//倒序输出</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj1426,bfs/dfs/bfs+同余模定理&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
      <category term="dfs" scheme="https://yuanfang.tech/tags/dfs/"/>
    
      <category term="bfs" scheme="https://yuanfang.tech/tags/bfs/"/>
    
  </entry>
  
  <entry>
    <title>poj3279</title>
    <link href="https://yuanfang.tech/2019/08/16/poj3279.html"/>
    <id>https://yuanfang.tech/2019/08/16/poj3279.html</id>
    <published>2019-08-15T19:11:35.000Z</published>
    <updated>2019-08-15T19:18:13.304Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj3279,二进制搜索<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=3279" target="_blank" rel="noopener">http://poj.org/problem?id=3279</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>有一个m*n的棋盘，每个格子上是0或1，每次可以对一个格子做一次翻转操作，将被操作的格子和上下左右4个格子的0/1翻转。</p><p>问最少做多少次翻转可以将所有格子翻转成0，输出翻转方案。没有方案时输出“IMPOSSIBLE”。</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>啊以前写过的题目= =再写一遍给我wa成了傻子</p><p>棋盘的每一行都会影响到下一行的反转，因此只需要穷举第一排所有的反转方式就好了</p><p>然后判断下最后一排是不是全翻转成0了就好</p><p>要输出最少的翻转次数，所以要记录一下最小翻转次数（就是这里）</p><p>弄了好久才发现= =</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//官方数据：</span></span><br><span class="line"><span class="number">7</span> <span class="number">8</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="comment">//它的答案是：（26步）</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//一开始我只按照字典序就算了个这个答案= =（30步）</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> </span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> </span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> </span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> </span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> </span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> </span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">map</span>[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> e[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> finalans[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">map</span>[i][j]=e[i][j];</span><br><span class="line">ans[i][j]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">finalans[i][j]=ans[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pr</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,finalans[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,finalans[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f2</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,ans=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=x;i++)</span><br><span class="line">&#123;</span><br><span class="line">ans=ans*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> min,count;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,t,k,flag;</span><br><span class="line"><span class="keyword">bool</span> find=<span class="literal">false</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;e[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">finalans[i][j]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">min=inf;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;f2(n);i++)</span><br><span class="line">&#123;</span><br><span class="line">count=<span class="number">0</span>;</span><br><span class="line">t=i;</span><br><span class="line">init();</span><br><span class="line"><span class="keyword">for</span>(j=n;j&gt;=<span class="number">1</span>;j--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(t%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans[<span class="number">1</span>][j]=<span class="number">1</span>;</span><br><span class="line">count++;</span><br><span class="line"><span class="built_in">map</span>[<span class="number">1</span>][j]=fun(<span class="built_in">map</span>[<span class="number">1</span>][j]);</span><br><span class="line"><span class="built_in">map</span>[<span class="number">1</span>][j<span class="number">-1</span>]=fun(<span class="built_in">map</span>[<span class="number">1</span>][j<span class="number">-1</span>]);</span><br><span class="line"><span class="built_in">map</span>[<span class="number">1</span>][j+<span class="number">1</span>]=fun(<span class="built_in">map</span>[<span class="number">1</span>][j+<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">map</span>[<span class="number">2</span>][j]=fun(<span class="built_in">map</span>[<span class="number">2</span>][j]);</span><br><span class="line">&#125;</span><br><span class="line">t=t/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">2</span>;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(k=<span class="number">1</span>;k&lt;=n;k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">map</span>[j<span class="number">-1</span>][k]==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans[j][k]=<span class="number">1</span>;</span><br><span class="line">count++;</span><br><span class="line"><span class="built_in">map</span>[j][k]=fun(<span class="built_in">map</span>[j][k]);</span><br><span class="line"><span class="built_in">map</span>[j][k<span class="number">-1</span>]=fun(<span class="built_in">map</span>[j][k<span class="number">-1</span>]);</span><br><span class="line"><span class="built_in">map</span>[j][k+<span class="number">1</span>]=fun(<span class="built_in">map</span>[j][k+<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">map</span>[j+<span class="number">1</span>][k]=fun(<span class="built_in">map</span>[j+<span class="number">1</span>][k]);</span><br><span class="line"><span class="built_in">map</span>[j<span class="number">-1</span>][k]=fun(<span class="built_in">map</span>[j<span class="number">-1</span>][k]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(k=<span class="number">1</span>;k&lt;=n;k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">map</span>[m][k]==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(count&lt;min)</span><br><span class="line">&#123;</span><br><span class="line">min=count;</span><br><span class="line">solve();</span><br><span class="line">&#125;</span><br><span class="line">find=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(find)pr();</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"IMPOSSIBLE\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj3279,二进制搜索&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
      <category term="dfs" scheme="https://yuanfang.tech/tags/dfs/"/>
    
  </entry>
  
  <entry>
    <title>poj3278</title>
    <link href="https://yuanfang.tech/2019/08/16/poj3278.html"/>
    <id>https://yuanfang.tech/2019/08/16/poj3278.html</id>
    <published>2019-08-15T17:05:17.000Z</published>
    <updated>2019-08-15T17:07:24.818Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj3278,标准bfs<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=3278" target="_blank" rel="noopener">http://poj.org/problem?id=3278</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>输入n，m</p><p>n可以进行+1，-1，*2三种操作</p><p>问最少进行多少次操作，n变成m</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>vis记录一下访问防止重复入队</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,t;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">queue</span>&lt;node&gt; q;</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">200010</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">node start;</span><br><span class="line">start.x=n;</span><br><span class="line">start.t=<span class="number">0</span>;</span><br><span class="line">q.push(start);</span><br><span class="line">vis[n]=<span class="literal">true</span>;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">node x,next;</span><br><span class="line">x=q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">if</span>(x.x==m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,x.t);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(vis[x.x*<span class="number">2</span>]==<span class="literal">false</span>&amp;&amp;x.x*<span class="number">2</span>&lt;<span class="number">100010</span>)</span><br><span class="line">&#123;</span><br><span class="line">next.x=x.x*<span class="number">2</span>;</span><br><span class="line">next.t=x.t+<span class="number">1</span>;</span><br><span class="line">q.push(next);</span><br><span class="line">vis[x.x*<span class="number">2</span>]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(vis[x.x<span class="number">-1</span>]==<span class="literal">false</span>&amp;&amp;x.x<span class="number">-1</span>&gt;=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">next.x=x.x<span class="number">-1</span>;</span><br><span class="line">next.t=x.t+<span class="number">1</span>;</span><br><span class="line">q.push(next);</span><br><span class="line">vis[x.x<span class="number">-1</span>]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(vis[x.x+<span class="number">1</span>]==<span class="literal">false</span>&amp;&amp;x.x+<span class="number">1</span>&lt;<span class="number">100010</span>)</span><br><span class="line">&#123;</span><br><span class="line">next.x=x.x+<span class="number">1</span>;</span><br><span class="line">next.t=x.t+<span class="number">1</span>;</span><br><span class="line">q.push(next);</span><br><span class="line">vis[x.x+<span class="number">1</span>]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj3278,标准bfs&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
      <category term="bfs" scheme="https://yuanfang.tech/tags/bfs/"/>
    
  </entry>
  
  <entry>
    <title>poj2251</title>
    <link href="https://yuanfang.tech/2019/08/16/poj2251.html"/>
    <id>https://yuanfang.tech/2019/08/16/poj2251.html</id>
    <published>2019-08-15T16:39:16.000Z</published>
    <updated>2019-08-15T16:41:39.525Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj2251,三维bfs<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=2251" target="_blank" rel="noopener">http://poj.org/problem?id=2251</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给出一三维空间的地牢,要求求出由字符’S’到字符’E’的最短路径移动方向可以是上，下，左，右，前，后，六个方向，每移动一次就耗费一分钟，要求输出最快的走出时间。不同L层的地图，相同RC坐标处是连通的，“#”不可通过，“.”可走。</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>标准bfs</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">bool</span> visit[<span class="number">35</span>][<span class="number">35</span>][<span class="number">35</span>];</span><br><span class="line"><span class="keyword">char</span> <span class="built_in">map</span>[<span class="number">35</span>][<span class="number">35</span>][<span class="number">35</span>];</span><br><span class="line"><span class="keyword">int</span> dir[<span class="number">6</span>][<span class="number">3</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> flag;</span><br><span class="line"><span class="keyword">int</span> l,r,c;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y,z;</span><br><span class="line"><span class="keyword">int</span> s;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">queue</span>&lt;node&gt; q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())q.pop();</span><br><span class="line"><span class="built_in">memset</span>(visit,<span class="literal">false</span>,<span class="keyword">sizeof</span>(visit));</span><br><span class="line"><span class="built_in">memset</span>(<span class="built_in">map</span>,<span class="string">'.'</span>,<span class="keyword">sizeof</span>(<span class="built_in">map</span>));</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span> || y&lt;<span class="number">0</span> || z&lt;<span class="number">0</span> || x&gt;=l || y&gt;=r || z&gt;=c)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">map</span>[x][y][z] == <span class="string">'#'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(visit[x][y][z])</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,k;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;l,&amp;r,&amp;c)&amp;&amp;(l||r||c))</span><br><span class="line">&#123;</span><br><span class="line">init();</span><br><span class="line">getchar();<span class="comment">//吃回车</span></span><br><span class="line">node start;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;l;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;r;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;c;k++)<span class="comment">//三维的输入</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;ch;</span><br><span class="line"><span class="built_in">map</span>[i][j][k]=ch;</span><br><span class="line"><span class="keyword">if</span>(ch==<span class="string">'S'</span>)<span class="comment">//记录起点位置</span></span><br><span class="line">&#123;</span><br><span class="line">start.x=i;</span><br><span class="line">start.y=j;</span><br><span class="line">start.z=k;</span><br><span class="line">start.s=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">getchar();</span><br><span class="line">&#125;</span><br><span class="line">getchar();</span><br><span class="line">&#125;</span><br><span class="line">q.push(start);</span><br><span class="line">visit[start.x][start.y][start.z]=<span class="number">1</span>;<span class="comment">//标记</span></span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">node m=q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">map</span>[m.x][m.y][m.z]==<span class="string">'E'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Escaped in %d minute(s).\n"</span>,m.s);</span><br><span class="line">flag=<span class="number">1</span>;<span class="comment">//已经找到</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">node next;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">next=m;</span><br><span class="line">next.x=next.x+dir[i][<span class="number">0</span>];</span><br><span class="line">next.y=next.y+dir[i][<span class="number">1</span>];</span><br><span class="line">next.z=next.z+dir[i][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">if</span>(check(next.x,next.y,next.z))<span class="keyword">continue</span>;</span><br><span class="line">visit[next.x][next.y][next.z]=<span class="literal">true</span>;</span><br><span class="line">next.s=m.s+<span class="number">1</span>;</span><br><span class="line">q.push(next);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag)</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"Trapped!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj2251,三维bfs&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>poj1321</title>
    <link href="https://yuanfang.tech/2019/08/15/poj1321.html"/>
    <id>https://yuanfang.tech/2019/08/15/poj1321.html</id>
    <published>2019-08-15T15:48:46.000Z</published>
    <updated>2019-08-15T15:51:27.977Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj1321,简单dfs<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=1321" target="_blank" rel="noopener">http://poj.org/problem?id=1321</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>在一个给定形状的棋盘（形状可能是不规则的）上面摆放棋子，棋子没有区别。</p><p>要求摆放时任意的两个棋子不能放在棋盘中的同一行或者同一列</p><p>请编程求解对于给定形状和大小的棋盘，摆放k个棋子的所有可行的摆放方案C。</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>简单dfs，回溯之后记得更改标记</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">char</span> <span class="built_in">map</span>[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> ans,k;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(m==k)</span><br><span class="line">&#123;</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x&gt;n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[i]==<span class="number">0</span>&amp;&amp;<span class="built_in">map</span>[x][i]==<span class="string">'#'</span>)<span class="comment">//判断条件 </span></span><br><span class="line">&#123;</span><br><span class="line">vis[i]=<span class="literal">true</span>;<span class="comment">//标记可用 </span></span><br><span class="line">k++;</span><br><span class="line">dfs(x+<span class="number">1</span>);<span class="comment">//下一行 </span></span><br><span class="line">vis[i]=<span class="literal">false</span>;<span class="comment">//回溯之后改回来方便下一列的判断 </span></span><br><span class="line">k--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">dfs(x+<span class="number">1</span>);<span class="comment">//下一行 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF&amp;&amp;n!=<span class="number">-1</span>&amp;&amp;k!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line">k=<span class="number">0</span>;</span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">gets(<span class="built_in">map</span>[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">dfs(<span class="number">1</span>);<span class="comment">//开始的行数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj1321,简单dfs&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
      <category term="dfs" scheme="https://yuanfang.tech/tags/dfs/"/>
    
  </entry>
  
  <entry>
    <title>poj1258</title>
    <link href="https://yuanfang.tech/2019/08/13/poj1258.html"/>
    <id>https://yuanfang.tech/2019/08/13/poj1258.html</id>
    <published>2019-08-13T10:10:05.000Z</published>
    <updated>2019-08-13T10:12:05.118Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj1258,最小生成树，水<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=1258" target="_blank" rel="noopener">http://poj.org/problem?id=1258</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给你N*N矩阵，表示N个村庄之间的距离。FJ要把N个村庄全都连接起来，求连接的最短距离。</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>多组输入，记得sum清空</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> e[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> lowcost[<span class="number">110</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>,n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prim</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line">lowcost[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">lowcost[i]=e[<span class="number">1</span>][i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> max=inf;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lowcost[j]!=<span class="number">0</span>&amp;&amp;lowcost[j]&lt;max)</span><br><span class="line">&#123;</span><br><span class="line">max=lowcost[j];</span><br><span class="line">temp=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sum=sum+lowcost[temp];</span><br><span class="line">lowcost[temp]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(e[temp][j]&lt;lowcost[j])</span><br><span class="line">&#123;</span><br><span class="line">lowcost[j]=e[temp][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;e[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">prim();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj1258,最小生成树，水&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
      <category term="prim" scheme="https://yuanfang.tech/tags/prim/"/>
    
  </entry>
  
  <entry>
    <title>poj1751</title>
    <link href="https://yuanfang.tech/2019/08/13/poj1751.html"/>
    <id>https://yuanfang.tech/2019/08/13/poj1751.html</id>
    <published>2019-08-13T09:48:51.000Z</published>
    <updated>2019-08-13T09:52:40.587Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj1751,kruskal<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=1751" target="_blank" rel="noopener">http://poj.org/problem?id=1751</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>有一个N个城市M条路的无向图</p><p>给你N个城市的坐标,现在该无向图已经有M条边了</p><p>问你还需要添加总长为多少的边能使得该无向图连通</p><p>输出需要添加边的两端点编号即可</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>计算每个城市间的距离，已经有的边权值置0，kruskal中加入的边如果权值不是0那么就是需要加的边，输出即可</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">760</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line">&#125;po[N];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">EDG</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> v;</span><br><span class="line">    <span class="keyword">int</span> u;</span><br><span class="line">    <span class="keyword">double</span> w;</span><br><span class="line">&#125;edg[<span class="number">600010</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> parent[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(EDG a, EDG b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.w &lt; b.w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i++)</span><br><span class="line">        parent[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find_set</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k, i, r = x;</span><br><span class="line">    <span class="keyword">while</span>(parent[r] != r) &#123;</span><br><span class="line">        r = parent[r];</span><br><span class="line">    &#125;</span><br><span class="line">    k = x;</span><br><span class="line">    <span class="keyword">while</span>(k != r) &#123;</span><br><span class="line">        i = parent[k];</span><br><span class="line">        parent[k] = r;</span><br><span class="line">        k = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> ans[N];</span><br><span class="line"><span class="keyword">int</span> flag;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kruskal</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, x, y,cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> sum;</span><br><span class="line">    <span class="built_in">set</span>();</span><br><span class="line">    <span class="keyword">int</span> tt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(sum = <span class="number">0</span>, i = <span class="number">0</span>; i &lt; k &amp;&amp; cnt &lt; n<span class="number">-1</span>; i++) &#123;</span><br><span class="line">        x = find_set(edg[i].u);</span><br><span class="line">        y = find_set(edg[i].v);</span><br><span class="line">        <span class="keyword">if</span>(x == y)    <span class="keyword">continue</span>;</span><br><span class="line">        parent[x] = parent[y]; ++cnt;</span><br><span class="line">        <span class="keyword">if</span>(edg[i].w!=<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,edg[i].u,edg[i].v);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;po[i].x,&amp;po[i].y); </span><br><span class="line">&#125;</span><br><span class="line">k=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">flag=n;</span><br><span class="line"><span class="keyword">while</span>(n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;edg[k].u,&amp;edg[k].v);</span><br><span class="line">edg[k].w=<span class="number">0</span>;</span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line">edg[k].u=i;</span><br><span class="line">edg[k].v=j;</span><br><span class="line">edg[k].w=(po[i].x-po[j].x)*(po[i].x-po[j].x)+(po[i].y-po[j].y)*(po[i].y-po[j].y);</span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sort(edg, edg+k, cmp);</span><br><span class="line">kruskal(m);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj1751,kruskal&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
      <category term="kruskal" scheme="https://yuanfang.tech/tags/kruskal/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
  </entry>
  
  <entry>
    <title>poj2349</title>
    <link href="https://yuanfang.tech/2019/08/13/poj2349.html"/>
    <id>https://yuanfang.tech/2019/08/13/poj2349.html</id>
    <published>2019-08-13T09:14:07.000Z</published>
    <updated>2019-08-13T09:19:58.221Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj2349,kruskal<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=2349" target="_blank" rel="noopener">http://poj.org/problem?id=2349</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>有两种不同的通信技术，有卫星通信的两个城市之间可以任意联络，但用无线电通信的城市只能和距离不超过D的城市联系。无线电的能力越高（即传输距离D越大），花费就越大。已知无线电的数目m，让求最小的D。</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>本质上求的就是最小生成树中的第（城市数量-卫星数量-1）的边的权值</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">510</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line">&#125;po[N];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">EDG</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> v;</span><br><span class="line">    <span class="keyword">int</span> u;</span><br><span class="line">    <span class="keyword">double</span> w;</span><br><span class="line">&#125;edg[<span class="number">500050</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> parent[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(EDG a, EDG b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.w &lt; b.w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i++)</span><br><span class="line">        parent[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find_set</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k, i, r = x;</span><br><span class="line">    <span class="keyword">while</span>(parent[r] != r) &#123;</span><br><span class="line">        r = parent[r];</span><br><span class="line">    &#125;</span><br><span class="line">    k = x;</span><br><span class="line">    <span class="keyword">while</span>(k != r) &#123;</span><br><span class="line">        i = parent[k];</span><br><span class="line">        parent[k] = r;</span><br><span class="line">        k = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> ans[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kruskal</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, x, y,cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> sum;</span><br><span class="line">    <span class="built_in">set</span>();</span><br><span class="line">    <span class="keyword">int</span> tt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(sum = <span class="number">0</span>, i = <span class="number">0</span>; i &lt; k &amp;&amp; cnt &lt; n<span class="number">-1</span>; i++) &#123;<span class="comment">//一开始让我wa的头皮发麻的地方</span></span><br><span class="line">        <span class="comment">//判断条件我写的i&lt;n，后面仔细思考了下总共有k条边</span></span><br><span class="line">        x = find_set(edg[i].u);</span><br><span class="line">        y = find_set(edg[i].v);</span><br><span class="line">        <span class="keyword">if</span>(x == y)    <span class="keyword">continue</span>;</span><br><span class="line">        parent[x] = parent[y]; ++cnt;</span><br><span class="line">        ans[tt++]=edg[i].w;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;po[i].x,&amp;po[i].y); </span><br><span class="line">&#125;</span><br><span class="line">k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line">edg[k].u=i;</span><br><span class="line">edg[k].v=j;</span><br><span class="line">edg[k].w=<span class="built_in">sqrt</span>((po[i].x-po[j].x)*(po[i].x-po[j].x)+(po[i].y-po[j].y)*(po[i].y-po[j].y));</span><br><span class="line">k++;</span><br><span class="line">edg[k].u=edg[k<span class="number">-1</span>].v;</span><br><span class="line">edg[k].v=edg[k<span class="number">-1</span>].u;</span><br><span class="line">edg[k].w=edg[k<span class="number">-1</span>].w;</span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sort(edg, edg+k, cmp);</span><br><span class="line">kruskal(m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2f\n"</span>,ans[m-n<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj2349,kruskal&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
      <category term="kruskal" scheme="https://yuanfang.tech/tags/kruskal/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
  </entry>
  
  <entry>
    <title>kruskal</title>
    <link href="https://yuanfang.tech/2019/08/13/kruskal.html"/>
    <id>https://yuanfang.tech/2019/08/13/kruskal.html</id>
    <published>2019-08-13T06:29:35.000Z</published>
    <updated>2019-08-13T07:42:37.122Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><p></p><h2 id="kruskal算法"><a href="#kruskal算法" class="headerlink" title="kruskal算法"></a>kruskal算法</h2><p>最小生成树之kruskal算法</p><p>复杂度：O(|Elog|E|)</p><a id="more"></a><h2 id="具体流程"><a href="#具体流程" class="headerlink" title="具体流程"></a>具体流程</h2><p>(1)将图<code>G</code>看做一个森林，每个顶点为一棵独立的树</p><p>(2)将所有的边加入集合<code>S</code>，即一开始<code>S = E</code></p><p>(3)从<code>S</code>中拿出一条最短的边<code>(u,v)</code>，如果<code>(u,v)</code>不在同一棵树内，则连接<code>u</code>,<code>v</code>合并这两棵树，同时将<code>(u,v)</code>加入生成树的边集<code>E&#39;</code></p><p>(4)重复(3)直到所有点属于同一棵树，边集<code>E&#39;</code>就是一棵最小生成树</p><h2 id="图解"><a href="#图解" class="headerlink" title="图解"></a>图解</h2><p><img src="kruskal\20150816105532486.jfif" alt="img"></p><p>首先，我们将所有的边都进行从小到大的排序。排序之后根据贪心准则，我们选取最小边<code>(A,D)</code>。我们发现顶点<code>A</code>,<code>D</code>不在一棵树上，所以合并顶点<code>A</code>,<code>D</code>所在的树，并将边<code>(A,D)</code>加入边集<code>E&#39;</code>。</p><p><img src="kruskal\20150816111905267.jfif" alt="img"></p><p>我们接着在剩下的边中查找权值最小的边，于是我们找到的<code>(C,E)</code>。我们可以发现，顶点<code>C</code>,<code>E</code>仍然不在一棵树上，所以我们合并顶点<code>C</code>，<code>E</code>所在的树，并将边<code>(C,E)</code>加入边集<code>E&#39;</code></p><p><img src="kruskal\20150816112526131.jfif" alt="img"></p><p>不断重复上述的过程，于是我们就找到了无向图B的最小生成树，如下图所示：</p><p><img src="kruskal\20150816113249128.jfif" alt="img"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">EDG</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> v;</span><br><span class="line">    <span class="keyword">int</span> u;</span><br><span class="line">    <span class="keyword">int</span> w;</span><br><span class="line">&#125;edg[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> parent[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(EDG a, EDG b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.w &lt; b.w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        parent[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find_set</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k, i, r = n;</span><br><span class="line">    <span class="keyword">while</span>(parent[r] != r) &#123;</span><br><span class="line">        r = parent[r];</span><br><span class="line">    &#125;</span><br><span class="line">    k = n;</span><br><span class="line">    <span class="keyword">while</span>(k != r) &#123;</span><br><span class="line">        i = parent[k];</span><br><span class="line">        parent[k] = r;</span><br><span class="line">        k = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kruskal</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, x, y, sum, cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">set</span>();</span><br><span class="line">    <span class="keyword">for</span>(sum = <span class="number">0</span>, i = <span class="number">0</span>; i &lt; n &amp;&amp; cnt &lt; n<span class="number">-1</span>; i++) &#123;</span><br><span class="line">        x = find_set(edg[i].u);</span><br><span class="line">        y = find_set(edg[i].v);</span><br><span class="line">        <span class="keyword">if</span>(x == y)    <span class="keyword">continue</span>;</span><br><span class="line">        parent[x] = parent[y]; ++cnt;</span><br><span class="line">        sum += edg[i].w;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m, i, u, v, w;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; m &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; n; i++)  &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">        edg[i].v = v;</span><br><span class="line">        edg[i].u = u;</span><br><span class="line">        edg[i].w = w;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(edg, edg+n, cmp);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; kruskal(n) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;h2 id=&quot;kruskal算法&quot;&gt;&lt;a href=&quot;#kruskal算法&quot; class=&quot;headerlink&quot; title=&quot;kruskal算法&quot;&gt;&lt;/a&gt;kruskal算法&lt;/h2&gt;&lt;p&gt;最小生成树之kruskal算法&lt;/p&gt;
&lt;p&gt;复杂度：O(|Elog|E|)&lt;/p&gt;
    
    </summary>
    
      <category term="algorithm" scheme="https://yuanfang.tech/categories/algorithm/"/>
    
    
      <category term="kruskal" scheme="https://yuanfang.tech/tags/kruskal/"/>
    
  </entry>
  
  <entry>
    <title>poj1789</title>
    <link href="https://yuanfang.tech/2019/08/13/poj1789.html"/>
    <id>https://yuanfang.tech/2019/08/13/poj1789.html</id>
    <published>2019-08-12T16:29:16.000Z</published>
    <updated>2019-08-12T16:32:44.467Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj1789，最小生成树，水= =<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=1789" target="_blank" rel="noopener">http://poj.org/problem?id=1789</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>n个车牌号，刚开始只有一个车牌，其他车牌都是由一个车牌直接或间接产生</p><p>一个车牌到另一个车牌的产生权值是它们之间的数字不同的个数</p><p>输出最小生成树边权和倒数</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>水！</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">2010</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> e[<span class="number">2010</span>][<span class="number">2010</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> lowcost[<span class="number">2010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prim</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">lowcost[i]=e[<span class="number">1</span>][i];</span><br><span class="line">&#125;</span><br><span class="line">lowcost[<span class="number">1</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j,min=inf,temp;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lowcost[j]!=<span class="number">-1</span>&amp;&amp;lowcost[j]&lt;min)</span><br><span class="line">&#123;</span><br><span class="line">min=lowcost[j];</span><br><span class="line">temp=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=ans+lowcost[temp];</span><br><span class="line">lowcost[temp]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(e[temp][j]&lt;lowcost[j])</span><br><span class="line">&#123;</span><br><span class="line">lowcost[j]=e[temp][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n),n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,k,sum;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=i;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">e[i][j]=inf;</span><br><span class="line"><span class="keyword">if</span>(i==j)e[i][j]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=i;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;<span class="number">7</span>;k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i][k]!=s[j][k])sum++;</span><br><span class="line">&#125;</span><br><span class="line">e[i][j]=sum;</span><br><span class="line">e[j][i]=sum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The highest possible quality is 1/%d.\n"</span> ,prim()) ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj1789，最小生成树，水= =&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
      <category term="prim" scheme="https://yuanfang.tech/tags/prim/"/>
    
  </entry>
  
  <entry>
    <title>快速输入</title>
    <link href="https://yuanfang.tech/2019/08/12/%E5%BF%AB%E9%80%9F%E8%BE%93%E5%85%A5.html"/>
    <id>https://yuanfang.tech/2019/08/12/快速输入.html</id>
    <published>2019-08-12T14:31:20.000Z</published>
    <updated>2019-08-15T12:19:14.556Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>终极蛇皮之求求你做个人吧偷鸡过TLE之快速输入<p></p><p><img src="https://lmf424.oss-cn-beijing.aliyuncs.com/shua.gif" alt></p><p>cin 没有 scanf 快，那么还有比 scanf还快的输入吗？那就是getchar()，它比scanf快多了，输入挂就是根据它写的，具体代码（代码是看大牛的）如下：</p><a id="more"></a><h3 id="int："><a href="#int：" class="headerlink" title="int："></a>int：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">scan_d</span><span class="params">(<span class="keyword">int</span> &amp;num)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">char</span> in;<span class="keyword">bool</span> IsN=<span class="literal">false</span>;</span><br><span class="line">        in=getchar();</span><br><span class="line">        <span class="keyword">if</span>(in==EOF) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">while</span>(in!=<span class="string">'-'</span>&amp;&amp;(in&lt;<span class="string">'0'</span>||in&gt;<span class="string">'9'</span>)) in=getchar();</span><br><span class="line">        <span class="keyword">if</span>(in==<span class="string">'-'</span>)&#123; IsN=<span class="literal">true</span>;num=<span class="number">0</span>;&#125;</span><br><span class="line">        <span class="keyword">else</span> num=in-<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">while</span>(in=getchar(),in&gt;=<span class="string">'0'</span>&amp;&amp;in&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">                num*=<span class="number">10</span>,num+=in-<span class="string">'0'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(IsN) num=-num;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="double："><a href="#double：" class="headerlink" title="double："></a>double：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">scan_lf</span><span class="params">(<span class="keyword">double</span> &amp;num)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">char</span> in;<span class="keyword">double</span> Dec=<span class="number">0.1</span>;</span><br><span class="line">        <span class="keyword">bool</span> IsN=<span class="literal">false</span>,IsD=<span class="literal">false</span>;</span><br><span class="line">        in=getchar();</span><br><span class="line">        <span class="keyword">if</span>(in==EOF) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">while</span>(in!=<span class="string">'-'</span>&amp;&amp;in!=<span class="string">'.'</span>&amp;&amp;(in&lt;<span class="string">'0'</span>||in&gt;<span class="string">'9'</span>))</span><br><span class="line">                in=getchar();</span><br><span class="line">        <span class="keyword">if</span>(in==<span class="string">'-'</span>)&#123;IsN=<span class="literal">true</span>;num=<span class="number">0</span>;&#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(in==<span class="string">'.'</span>)&#123;IsD=<span class="literal">true</span>;num=<span class="number">0</span>;&#125;</span><br><span class="line">        <span class="keyword">else</span> num=in-<span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">if</span>(!IsD)&#123;</span><br><span class="line">                <span class="keyword">while</span>(in=getchar(),in&gt;=<span class="string">'0'</span>&amp;&amp;in&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">                        num*=<span class="number">10</span>;num+=in-<span class="string">'0'</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(in!=<span class="string">'.'</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(IsN) num=-num;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">while</span>(in=getchar(),in&gt;=<span class="string">'0'</span>&amp;&amp;in&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">                        num+=Dec*(in-<span class="string">'0'</span>);Dec*=<span class="number">0.1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(IsN) num=-num;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="求求你做个人吧终极版本："><a href="#求求你做个人吧终极版本：" class="headerlink" title="求求你做个人吧终极版本："></a>求求你做个人吧终极版本：</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">// *Copyright by i.Pear Works*</span></span><br><span class="line"><span class="comment">//本IO模块的用途是方便地读写大量整数</span></span><br><span class="line"><span class="comment">//若题目整数不多 请改用关闭同步锁的cin(因为本模块不支持关闭同步锁)或scanf</span></span><br><span class="line"><span class="keyword">namespace</span> FastIO&#123;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//不支持while(qin&gt;&gt;x)的多组数据输入方法</span></span><br><span class="line"><span class="comment">//任何情况下请不要关闭sync_with_stdio同步锁!!</span></span><br><span class="line"><span class="comment">//如果您选择关闭同步锁以获得更高的cin/cout速度 使用此模块会导致不可预期的后果</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//此处为负数读取功能开关</span></span><br><span class="line"><span class="comment">//若程序不会读入负数 请去除下方注释符号 以获得30%的输入提速</span></span><br><span class="line"><span class="comment">//#define DisableNegative true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//此处为兼容性模式开关 若程序IO存在 *任何* *int/ll/char[]/string/char(包括空格回车)* 之外的类型</span></span><br><span class="line"><span class="comment">//请去除下方注释符号 降低一半的速度以获得兼容性</span></span><br><span class="line"><span class="comment">//#define EnableCompatibility true</span></span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Scanner</span>&#123;</span></span><br><span class="line">        <span class="keyword">char</span> cht;</span><br><span class="line">        <span class="keyword">bool</span> ifNegative;</span><br><span class="line">        <span class="keyword">char</span> stringBuf[<span class="number">10000</span>];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> EnableCompatibility</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUF_SIZE 524288</span></span><br><span class="line">        <span class="function"><span class="keyword">char</span> <span class="title">nc</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">static</span> <span class="keyword">char</span> buf[BUF_SIZE],*p1=buf+BUF_SIZE,*pend=buf+BUF_SIZE;</span><br><span class="line">            <span class="keyword">if</span>(p1==pend)&#123;</span><br><span class="line">                p1=buf;</span><br><span class="line">                pend=buf+fread(buf,<span class="number">1</span>,BUF_SIZE,<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="keyword">if</span>(pend==p1)<span class="keyword">return</span> <span class="string">' '</span>;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DisableNegative</span></span><br><span class="line">            <span class="keyword">if</span>(*p1==<span class="string">'-'</span>)&#123;</span><br><span class="line">                ifNegative=<span class="literal">true</span>;</span><br><span class="line">                p1++;</span><br><span class="line">                <span class="keyword">return</span> nc();</span><br><span class="line">            &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            <span class="keyword">return</span> *p1++;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        <span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">nc</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> getchar();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">        <span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">blank</span><span class="params">(<span class="keyword">char</span> ch)</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> ch==<span class="string">'\r'</span>||ch==<span class="string">'\n'</span>||ch==<span class="string">' '</span>||ch==<span class="string">'\t'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Scanner <span class="keyword">operator</span>&gt;&gt;(<span class="keyword">int</span>&amp;x)&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DisableNegative</span></span><br><span class="line">            ifNegative=<span class="literal">false</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            <span class="keyword">while</span>(blank(cht=nc()));</span><br><span class="line">            <span class="keyword">for</span>(x=cht-<span class="string">'0'</span>;(cht=nc())&gt;=<span class="string">'0'</span>&amp;&amp;cht&lt;=<span class="string">'9'</span>;x=x*<span class="number">10</span>+cht-<span class="string">'0'</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DisableNegative</span></span><br><span class="line">            <span class="keyword">if</span>(ifNegative)x*=<span class="number">-1</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Scanner <span class="keyword">operator</span>&gt;&gt;(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span>&amp;x)&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DisableNegative</span></span><br><span class="line">            ifNegative=<span class="literal">false</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            <span class="keyword">while</span>(blank(cht=nc()));</span><br><span class="line">            <span class="keyword">for</span>(x=cht-<span class="string">'0'</span>;(cht=nc())&gt;=<span class="string">'0'</span>&amp;&amp;cht&lt;=<span class="string">'9'</span>;x=x*<span class="number">10</span>+cht-<span class="string">'0'</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> DisableNegative</span></span><br><span class="line">            <span class="keyword">if</span>(ifNegative)x*=<span class="number">-1</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Scanner <span class="keyword">operator</span>&gt;&gt;(<span class="built_in">string</span>&amp;str)&#123;</span><br><span class="line">            <span class="keyword">int</span> p=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(blank(cht=nc()));</span><br><span class="line">            <span class="keyword">for</span>(stringBuf[p++]=cht;!blank(cht=nc());stringBuf[p++]=cht);</span><br><span class="line">            stringBuf[p]=<span class="string">'\0'</span>;</span><br><span class="line">            str=stringBuf;</span><br><span class="line">            <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Scanner <span class="keyword">operator</span>&gt;&gt;(<span class="keyword">char</span> str[])&#123;</span><br><span class="line">            <span class="keyword">int</span> p=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(blank(cht=nc()));</span><br><span class="line">            <span class="keyword">for</span>(str[p++]=cht;!blank(cht=nc());str[p++]=cht);</span><br><span class="line">            str[p]=<span class="string">'\0'</span>;</span><br><span class="line">            <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> F&gt;</span><br><span class="line">        <span class="keyword">inline</span> Scanner <span class="keyword">operator</span>&gt;&gt;(F&amp;f)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;f;</span><br><span class="line">            <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Printer</span>&#123;</span></span><br><span class="line">        <span class="keyword">int</span> num;</span><br><span class="line">        <span class="keyword">char</span> chr[<span class="number">21</span>];</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        Printer <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">int</span> x)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">putchar</span>(<span class="string">'0'</span>);</span><br><span class="line">                <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span>)x*=<span class="number">-1</span>,<span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">            num=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(x) chr[++num]=(x%<span class="number">10</span>)+<span class="number">48</span>,x/=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(num) <span class="built_in">putchar</span>(chr[num--]);</span><br><span class="line">            <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Printer <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> x)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">putchar</span>(<span class="string">'0'</span>);</span><br><span class="line">                <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(x&lt;<span class="number">0</span>)x*=<span class="number">-1</span>,<span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">            num=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(x) chr[++num]=(x%<span class="number">10</span>)+<span class="number">48</span>,x/=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(num) <span class="built_in">putchar</span>(chr[num--]);</span><br><span class="line">            <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">inline</span> Printer <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">char</span> x)&#123;</span><br><span class="line">            <span class="built_in">putchar</span>(x);</span><br><span class="line">            <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Printer <span class="keyword">operator</span>&lt;&lt;(<span class="keyword">const</span> <span class="keyword">char</span> str[])&#123;</span><br><span class="line">            <span class="keyword">int</span> p=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(str[p]!=<span class="string">'\0'</span>)&#123;</span><br><span class="line">                <span class="built_in">putchar</span>(str[p++]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">inline</span> Printer <span class="keyword">operator</span>&lt;&lt;(<span class="built_in">string</span>&amp;x)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="built_in">string</span>::iterator i=x.begin();i&lt;x.end();i++)<span class="built_in">putchar</span>(*i);</span><br><span class="line">            <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> F&gt;</span><br><span class="line">        <span class="keyword">inline</span> Printer <span class="keyword">operator</span>&lt;&lt;(F&amp;f)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;f;</span><br><span class="line">            <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    Scanner qin;</span><br><span class="line">    Printer qout;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> endl <span class="meta-string">'\n'</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> FastIO;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//-----------------模板到此结束 以下是测试代码--------------------</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//test</span></span><br><span class="line">    freopen(<span class="string">"D:\\1.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> arr[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        qin&gt;&gt;arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        qout&lt;&lt;arr[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// !!run this test with "EnableCompatibility" mode on</span></span><br><span class="line">    freopen(<span class="string">"D:\\1.txt"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> b;</span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">    <span class="keyword">double</span> d;</span><br><span class="line">    <span class="built_in">string</span> e;</span><br><span class="line">    <span class="keyword">float</span> f;</span><br><span class="line"> </span><br><span class="line">    qin&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d&gt;&gt;e&gt;&gt;f;</span><br><span class="line">    qout&lt;&lt;a&lt;&lt;<span class="string">" "</span>&lt;&lt;b&lt;&lt;<span class="built_in">endl</span>&lt;&lt;c&lt;&lt;<span class="string">" "</span>&lt;&lt;d&lt;&lt;<span class="built_in">endl</span>&lt;&lt;e&lt;&lt;<span class="string">" "</span>&lt;&lt;f;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的“兼容性模式”是不再建立缓冲区而用疯狂getchar替代 这样不会把后面不是整数的数据也存进缓冲区</p><p>实验证明这样速度会慢一半 但是也比scanf快得多</p><p>如果不需要读取负数 可以打开上面DisableNegative的开关 编译时会少几个判断 效率也有一些提升</p><p>在不开启兼容性+DisableNegative的模式下 和原模板的速度没有区别</p><p><strong>简述一下用法：</strong>只要把这段代码粘贴到您代码的最上方 然后使用qin,qout（q是quick的意思）代替cin,cout就可以了</p><p>所有的输入输出都使用运算符&lt;&lt;,&gt;&gt;来进行</p><p>经过测速 虽然用了大量的反复重载和类 速度并未改变 但从使用上来说也许会更方便一些</p><p><strong>已知的一些问题：</strong></p><p>1.qout不能正确的输出-9223372036854775808这个数（ll的最小值）因为去掉符号会溢出</p><p>但只有这一个数不能用 实际需要输出这个数的场合也不多见  就不为了它降低整体效率了</p><p>2.快速写部分对于绝大多数类型都有加速作用 但是快读只对整数类型起作用</p><p><strong>如果数据中不是含有大量的整数 请慎用此模板（因为与sync_with_stdio不共存）</strong></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;终极蛇皮之求求你做个人吧偷鸡过TLE之快速输入&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lmf424.oss-cn-beijing.aliyuncs.com/shua.gif&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;cin 没有 scanf 快，那么还有比 scanf还快的输入吗？那就是getchar()，它比scanf快多了，输入挂就是根据它写的，具体代码（代码是看大牛的）如下：&lt;/p&gt;
    
    </summary>
    
      <category term="xiu" scheme="https://yuanfang.tech/categories/xiu/"/>
    
    
      <category term="xiu" scheme="https://yuanfang.tech/tags/xiu/"/>
    
  </entry>
  
  <entry>
    <title>zoj1586</title>
    <link href="https://yuanfang.tech/2019/08/12/zoj1586.html"/>
    <id>https://yuanfang.tech/2019/08/12/zoj1586.html</id>
    <published>2019-08-12T08:55:07.000Z</published>
    <updated>2019-08-12T09:01:30.903Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>zoj1586，最小生成树<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=1586" target="_blank" rel="noopener">http://acm.zju.edu.cn/onlinejudge/showProblem.do?problemCode=1586</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>t组数据</p><p>n个人</p><p>每个人的路由器的价格</p><p>每个人连线到其他人的价格</p><p>输出最少多少钱可以所有人联通</p><p>两个人联通的价格=a路由器价格+b路由器价格+两人连线的价格</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>存权值的时候加上两个人的路由器价格，然后跑一边prim就好</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0xfffffff</span>;</span><br><span class="line"><span class="keyword">int</span> e[<span class="number">1010</span>][<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> lowcost[<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> wifi[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prim</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">lowcost[i]=e[<span class="number">1</span>][i];</span><br><span class="line">&#125;</span><br><span class="line">lowcost[<span class="number">1</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j,min=inf,temp;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lowcost[j]!=<span class="number">-1</span>&amp;&amp;lowcost[j]&lt;min)</span><br><span class="line">&#123;</span><br><span class="line">min=lowcost[j];</span><br><span class="line">temp=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=ans+lowcost[temp];</span><br><span class="line">lowcost[temp]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(e[temp][j]&lt;lowcost[j])</span><br><span class="line">&#123;</span><br><span class="line">lowcost[j]=e[temp][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> a,b,c;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;wifi[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> d;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;d);</span><br><span class="line">e[i][j]=wifi[i]+wifi[j]+d;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,prim());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;zoj1586，最小生成树&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="zoj" scheme="https://yuanfang.tech/categories/zoj/"/>
    
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
      <category term="prim" scheme="https://yuanfang.tech/tags/prim/"/>
    
      <category term="zoj" scheme="https://yuanfang.tech/tags/zoj/"/>
    
  </entry>
  
  <entry>
    <title>poj2421</title>
    <link href="https://yuanfang.tech/2019/08/12/poj2421.html"/>
    <id>https://yuanfang.tech/2019/08/12/poj2421.html</id>
    <published>2019-08-12T08:14:39.000Z</published>
    <updated>2019-08-12T08:18:26.072Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj2421,带条件的最小生成树<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=2421" target="_blank" rel="noopener">http://poj.org/problem?id=2421</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>n个村庄，接下来n行</p><p>告诉你到别的村庄的距离</p><p>然后m条路，表示a，b两个村庄已经是联通的了</p><p>问最少再修多长的路就可以把所有村庄联通</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>已经有路的村庄距离设为0即可</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0xfffffff</span>;</span><br><span class="line"><span class="keyword">int</span> e[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> lowcost[<span class="number">110</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prim</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">lowcost[i]=e[<span class="number">1</span>][i];</span><br><span class="line">lowcost[<span class="number">1</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j,min=inf,temp;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lowcost[j]!=<span class="number">-1</span>&amp;&amp;lowcost[j]&lt;min)</span><br><span class="line">&#123;</span><br><span class="line">min=lowcost[j];</span><br><span class="line">temp=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=ans+lowcost[temp];</span><br><span class="line">lowcost[temp]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(e[temp][j]&lt;lowcost[j])</span><br><span class="line">&#123;</span><br><span class="line">lowcost[j]=e[temp][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> a,b,c;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;e[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">e[a][b]=<span class="number">0</span>;</span><br><span class="line">e[b][a]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,prim());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj2421,带条件的最小生成树&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
      <category term="prim" scheme="https://yuanfang.tech/tags/prim/"/>
    
  </entry>
  
  <entry>
    <title>poj2031</title>
    <link href="https://yuanfang.tech/2019/08/12/poj2031.html"/>
    <id>https://yuanfang.tech/2019/08/12/poj2031.html</id>
    <published>2019-08-12T07:50:08.000Z</published>
    <updated>2019-08-12T07:54:43.990Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj2031,三维坐标+最小生成树<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=2031" target="_blank" rel="noopener">http://poj.org/problem?id=2031</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>在一个三维坐标系上又n个球体</p><p>告诉你他们的x，y，z坐标和他们的半径</p><p>求他们距离的最小生成树</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>两个球可能会有相交的地方（dis&lt;=0）</p><p>所以就给相交的球距离置0</p><p>lowcost数组就把加入树中的点标记为-1</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0xfffffff</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">piont</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">double</span> x,y,z,r;</span><br><span class="line">&#125;e[<span class="number">110</span>];</span><br><span class="line"><span class="keyword">double</span> <span class="built_in">map</span>[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">double</span> lowcost[<span class="number">110</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">prim</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">lowcost[i]=<span class="built_in">map</span>[<span class="number">1</span>][i];</span><br><span class="line">lowcost[<span class="number">1</span>]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//int d;</span></span><br><span class="line"><span class="comment">//for(d=1;d&lt;=n;d++)</span></span><br><span class="line"><span class="comment">//printf("%lf   ",lowcost[d]);</span></span><br><span class="line"><span class="comment">//printf("\n"); </span></span><br><span class="line"><span class="keyword">int</span> j,temp;</span><br><span class="line"><span class="keyword">double</span> min=inf;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lowcost[j]!=<span class="number">-1</span>&amp;&amp;lowcost[j]&lt;min)</span><br><span class="line">&#123;</span><br><span class="line">min=lowcost[j];</span><br><span class="line">temp=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=ans+lowcost[temp];</span><br><span class="line">lowcost[temp]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">map</span>[temp][j]&lt;lowcost[j])</span><br><span class="line">&#123;</span><br><span class="line">lowcost[j]=<span class="built_in">map</span>[temp][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">double</span> a,b,c,d;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf%lf"</span>,&amp;a,&amp;b,&amp;c,&amp;d);</span><br><span class="line">e[i].x=a;</span><br><span class="line">e[i].y=b;</span><br><span class="line">e[i].z=c;</span><br><span class="line">e[i].r=d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">map</span>[i][j]=inf;</span><br><span class="line"><span class="keyword">if</span>(i==j)<span class="built_in">map</span>[i][j]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">double</span> dis=<span class="built_in">sqrt</span>((e[i].x-e[j].x)*(e[i].x-e[j].x)+(e[i].y-e[j].y)*(e[i].y-e[j].y)+(e[i].z-e[j].z)*(e[i].z-e[j].z));</span><br><span class="line"><span class="comment">//printf("%lf  %lf  %d %d\n",e[i].r,e[j].r,i,j);</span></span><br><span class="line">dis=dis-e[i].r-e[j].r;</span><br><span class="line"><span class="keyword">if</span>(dis&lt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">map</span>[i][j]=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">map</span>[j][i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">map</span>[i][j]=dis;</span><br><span class="line"><span class="built_in">map</span>[j][i]=dis;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.3lf\n"</span>,prim());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj2031,三维坐标+最小生成树&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
      <category term="prim" scheme="https://yuanfang.tech/tags/prim/"/>
    
  </entry>
  
  <entry>
    <title>poj1287</title>
    <link href="https://yuanfang.tech/2019/08/12/poj1287.html"/>
    <id>https://yuanfang.tech/2019/08/12/poj1287.html</id>
    <published>2019-08-12T07:14:10.000Z</published>
    <updated>2019-08-12T07:16:05.322Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj1287，最小生成树模板题<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=1287" target="_blank" rel="noopener">http://poj.org/problem?id=1287</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>n个点m条边</p><p>m行a到b的距离</p><p>求最小生成树大小</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>= =水</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0xfffffff</span>;</span><br><span class="line"><span class="keyword">int</span> e[<span class="number">60</span>][<span class="number">60</span>];</span><br><span class="line"><span class="keyword">int</span> lowcost[<span class="number">60</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prim</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">lowcost[i]=e[<span class="number">1</span>][i];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j,min=inf,temp;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lowcost[j]!=<span class="number">0</span>&amp;&amp;lowcost[j]&lt;min)</span><br><span class="line">&#123;</span><br><span class="line">min=lowcost[j];</span><br><span class="line">temp=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=ans+lowcost[temp];</span><br><span class="line">lowcost[temp]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(e[temp][j]&lt;lowcost[j])</span><br><span class="line">&#123;</span><br><span class="line">lowcost[j]=e[temp][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">e[i][j]=inf;</span><br><span class="line"><span class="keyword">if</span>(i==j)e[i][j]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> a,b,c;</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line"><span class="keyword">if</span>(c&lt;e[a][b])</span><br><span class="line">&#123;</span><br><span class="line">e[a][b]=c;</span><br><span class="line">e[b][a]=c;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,prim());</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj1287，最小生成树模板题&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
      <category term="prim" scheme="https://yuanfang.tech/tags/prim/"/>
    
  </entry>
  
  <entry>
    <title>poj1251</title>
    <link href="https://yuanfang.tech/2019/08/11/poj1251.html"/>
    <id>https://yuanfang.tech/2019/08/11/poj1251.html</id>
    <published>2019-08-11T11:41:44.000Z</published>
    <updated>2019-08-11T11:47:10.764Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj1251,最小生成树，prim，剧毒输入<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=1251" target="_blank" rel="noopener">http://poj.org/problem?id=1251</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>首先给你一个图，需要你求出最小生成树，输入N个节点，用大写字母表示了节点，然后节点与节点之间有权值。<br>比如有9个节点，然后接下来有n-1行表示了边的情况，拿第一行举例<br>A 2 B 12 I 25<br>表示A有两个邻点，B和I，AB权值是12，AI权值是25</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>poj的奇妙评测机，也可能是数据有毒，scanf会tle</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">27</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0xfffffff</span>;</span><br><span class="line"><span class="keyword">int</span> e[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prim</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> min,i,j,k;</span><br><span class="line"><span class="keyword">int</span> lowcost[maxn];</span><br><span class="line"><span class="keyword">int</span> adj[maxn];</span><br><span class="line">lowcost[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">adj[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">lowcost[i]=e[<span class="number">1</span>][i];</span><br><span class="line">adj[i]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//int d;</span></span><br><span class="line"><span class="comment">//for(d=1;d&lt;=n;d++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//printf("%d %d  ",d,lowcost[d]);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//printf("\n");</span></span><br><span class="line">min=inf;</span><br><span class="line">j=<span class="number">1</span>;k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line"><span class="keyword">if</span>(lowcost[j]!=<span class="number">0</span>&amp;&amp;lowcost[j]&lt;min)</span><br><span class="line">&#123;</span><br><span class="line">min=lowcost[j];</span><br><span class="line">k=j;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//printf("(%d, %d)\n",adj[k], k);</span></span><br><span class="line">ans=ans+lowcost[k];</span><br><span class="line">lowcost[k]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lowcost[j]!=<span class="number">0</span>&amp;&amp;e[k][j]&lt;lowcost[j])</span><br><span class="line">&#123;</span><br><span class="line">lowcost[j]=e[k][j];</span><br><span class="line">adj[j]=k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> u;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n,n)</span><br><span class="line">&#123;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">27</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">27</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">e[i][j]=inf;</span><br><span class="line"><span class="keyword">if</span>(i==j)e[i][j]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;u;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">char</span> v;</span><br><span class="line"><span class="keyword">int</span> w;</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;v;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;w;</span><br><span class="line"><span class="keyword">if</span>(w&lt;e[u-<span class="string">'A'</span>+<span class="number">1</span>][v-<span class="string">'A'</span>+<span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">e[u-<span class="string">'A'</span>+<span class="number">1</span>][v-<span class="string">'A'</span>+<span class="number">1</span>]=w;e[v-<span class="string">'A'</span>+<span class="number">1</span>][u-<span class="string">'A'</span>+<span class="number">1</span>]=w;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">prim();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj1251,最小生成树，prim，剧毒输入&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
      <category term="prim" scheme="https://yuanfang.tech/tags/prim/"/>
    
  </entry>
  
  <entry>
    <title>poj1135</title>
    <link href="https://yuanfang.tech/2019/08/10/poj1135.html"/>
    <id>https://yuanfang.tech/2019/08/10/poj1135.html</id>
    <published>2019-08-10T10:37:36.000Z</published>
    <updated>2019-08-10T10:58:32.430Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>poj1135,比较有意思的最短路<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://poj.org/problem?id=1135" target="_blank" rel="noopener">http://poj.org/problem?id=1135</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>多米诺骨牌游戏。</p><p>计算最后倒下的是哪一张多米诺骨牌，在什么时间倒下。</p><p>多米诺骨牌包含一些关键牌，他们之间由一些普通骨牌来进行连接。</p><p>当一张关键牌倒下时，连接这张关键牌的所有行都开始倒下。</p><p>当倒下的行达到其他还没有倒下的关键牌时，则这些关键牌也开始倒下，同样连接它的所有行开始倒下。每一行骨牌可以从两个端点中任何一张关键牌开始倒下，甚至两个端点的关键牌可以分别倒下，在这种情形下，该行最后倒下的骨牌为中间的某张骨牌。</p><p>假定骨牌倒下的速度一致。</p><p>输入第一行n，m，表示n张骨牌，共有m行骨牌</p><p>接下来m行是a关键牌倒向b关键牌所需要的时间。</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>关键牌抽象成点，关键牌之间抽象为边。时间为权值。</p><p>1、计算每一张关键牌倒下的time[i]，然后去time[]的最大值，设为maxtime1；</p><p>2、计算每一行完全倒下的时间。设每一行的两端的关键牌为i和j，则这一行完全倒下的时间为</p><p>(time[i]+time[j]+e[i] [j])/2.0。取所有行完全倒下时间的最大值，设为maxtime2；</p><p>3、如果maxtime2&gt;maxtime1，则是第二种情形（即最后倒下的骨牌位于两张关键牌之间），否则是第一种情形。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">510</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inf=<span class="number">0xffffff</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> dis[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="keyword">int</span> e[maxn][maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="literal">false</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i==j)e[i][j]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> e[i][j]=inf;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijstra</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,v;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">dis[i]=e[x][i];</span><br><span class="line">&#125;</span><br><span class="line">dis[x]=<span class="number">0</span>;</span><br><span class="line">vis[x]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> min=inf;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[j]==<span class="number">0</span> &amp;&amp; dis[j]&lt;min)</span><br><span class="line">&#123;</span><br><span class="line">min=dis[j];</span><br><span class="line">temp=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">vis[temp]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(v=<span class="number">1</span>;v&lt;=n;v++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(e[temp][v]&lt;inf)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dis[temp]+e[temp][v]&lt;dis[v])</span><br><span class="line">dis[v]=dis[temp]+e[temp][v];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> kase=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;m==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">int</span> a,b,c;</span><br><span class="line">init();</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">e[a][b]=c;</span><br><span class="line">e[b][a]=c;</span><br><span class="line">&#125;</span><br><span class="line">dijstra(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">double</span> mtime1,mtime2;</span><br><span class="line"><span class="keyword">double</span> max=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> i,ans1i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dis[i]&gt;max)</span><br><span class="line">&#123;</span><br><span class="line">max=dis[i];</span><br><span class="line">ans1i=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">mtime1=max;</span><br><span class="line">max=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> ansi,ansj;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">double</span> k;</span><br><span class="line"><span class="keyword">if</span>(e[i][j]&lt;inf)</span><br><span class="line">&#123;</span><br><span class="line">k=(dis[i]+dis[j]+e[i][j])/<span class="number">2.0</span>;</span><br><span class="line"><span class="keyword">if</span>(k&gt;max)</span><br><span class="line">&#123;</span><br><span class="line">max=k;</span><br><span class="line">ansi=i;</span><br><span class="line">ansj=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">mtime2=max;</span><br><span class="line"><span class="keyword">if</span>(ansi&gt;ansj)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line">temp=ansi;</span><br><span class="line">ansi=ansj;</span><br><span class="line">ansj=temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"System #%d\n"</span>,++kase);</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>&amp;&amp;m==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"The last domino falls after 0.0 seconds, at key domino 1.\n\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(mtime1&gt;=mtime2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"The last domino falls after %.1f seconds, at key domino %d.\n\n"</span>,mtime1,ans1i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"The last domino falls after %.1f seconds, between key dominoes %d and %d.\n\n"</span>,mtime2,ansi,ansj);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;poj1135,比较有意思的最短路&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="poj" scheme="https://yuanfang.tech/categories/poj/"/>
    
    
      <category term="dijstra" scheme="https://yuanfang.tech/tags/dijstra/"/>
    
      <category term="poj" scheme="https://yuanfang.tech/tags/poj/"/>
    
  </entry>
  
  <entry>
    <title>hdu3038</title>
    <link href="https://yuanfang.tech/2019/08/10/hdu3038.html"/>
    <id>https://yuanfang.tech/2019/08/10/hdu3038.html</id>
    <published>2019-08-10T08:38:18.000Z</published>
    <updated>2019-08-10T08:43:36.007Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>hdu3038,加权并查集，需要理解<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=3038" target="_blank" rel="noopener">http://acm.hdu.edu.cn/showproblem.php?pid=3038</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>求在有n个数中，有m次询问，每次询问在这给定的区间和这区间里数的和为s，求每次给出的是不是正确的和s。也就是和前面的矛盾不矛盾。</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>用一个sum[]来记录当前端点到父亲节点的距离。</p><p>若输入的a，b的父亲节点相同时，进行判断。</p><p>否则更新父亲节点，同时更新点的sum[]。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 200010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> sum[maxn],pr[maxn];<span class="comment">//pr存父亲节点，sum存父亲节点到当前节点的距离 </span></span><br><span class="line"><span class="keyword">int</span> n,m,ans;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">pr[i]=i;</span><br><span class="line">sum[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==pr[x])<span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> k=pr[x];</span><br><span class="line">pr[x]=find(pr[x]);</span><br><span class="line">sum[x]=sum[x]+sum[k];</span><br><span class="line"><span class="keyword">return</span> pr[x];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">to_union</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line">x=find(a);</span><br><span class="line">y=find(b);</span><br><span class="line"><span class="keyword">if</span>(x==y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(sum[a]+c!=sum[b])</span><br><span class="line">&#123;</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(x&lt;y)</span><br><span class="line">&#123;</span><br><span class="line">pr[y]=x;</span><br><span class="line">sum[y]=sum[a]+c-sum[b];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">pr[x]=y;</span><br><span class="line">sum[x]=sum[b]-sum[a]-c;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m)!=EOF)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a,b,c;</span><br><span class="line">init();</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">to_union(a<span class="number">-1</span>,b,c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;hdu3038,加权并查集，需要理解&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hdu" scheme="https://yuanfang.tech/categories/hdu/"/>
    
    
      <category term="并查集" scheme="https://yuanfang.tech/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="hdu" scheme="https://yuanfang.tech/tags/hdu/"/>
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
  </entry>
  
  <entry>
    <title>hdu1213</title>
    <link href="https://yuanfang.tech/2019/08/09/hdu1213.html"/>
    <id>https://yuanfang.tech/2019/08/09/hdu1213.html</id>
    <published>2019-08-09T06:21:56.000Z</published>
    <updated>2019-08-09T16:55:09.903Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>hdu1213，并查集水题<p></p><a id="more"></a><h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a>题目链接</h2><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1213" target="_blank" rel="noopener">http://acm.hdu.edu.cn/showproblem.php?pid=1213</a></p><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>输入t组，n个人，m组关系。</p><p>a认识b，b认识c，那么a也等于认识c。</p><p>认识的人可以坐一张桌子上，求最少要多少张桌子。</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>假设一开始有n张桌子，每有一个人并到集合中去，就减少一张桌子</p><p>代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; parent;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> max_size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 初始化每一个元素的根节点都为自身</span></span><br><span class="line">parent.clear();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;=max_size; ++i)</span><br><span class="line">parent.push_back(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> parent[x] == x ? x : find(parent[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">to_union</span><span class="params">(<span class="keyword">int</span> x1, <span class="keyword">int</span> x2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">parent[find(x1)] = find(x2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t,n,m,i,a,b;</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">1010</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">init(n);</span><br><span class="line"><span class="keyword">int</span> ans=n;</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(find(a)!=find(b))</span><br><span class="line">&#123;</span><br><span class="line">ans--;</span><br><span class="line">to_union(a,b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;hdu1213，并查集水题&lt;p&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hdu" scheme="https://yuanfang.tech/categories/hdu/"/>
    
    
      <category term="并查集" scheme="https://yuanfang.tech/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="hdu" scheme="https://yuanfang.tech/tags/hdu/"/>
    
      <category term="kuangbin" scheme="https://yuanfang.tech/tags/kuangbin/"/>
    
  </entry>
  
  <entry>
    <title>七夕</title>
    <link href="https://yuanfang.tech/2019/08/07/%E4%B8%83%E5%A4%95.html"/>
    <id>https://yuanfang.tech/2019/08/07/七夕.html</id>
    <published>2019-08-07T11:53:15.000Z</published>
    <updated>2019-08-15T12:18:36.531Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><p class="description"></p><br>一看居然七夕了。<p></p><p><img src="https://lmf424.oss-cn-beijing.aliyuncs.com/56884409_p0.jpg" alt></p><a id="more"></a><p>我是对这个节日不怎么感冒的。</p><p>当然，我相信爱情，而且是很单纯的那种。我相信美好的爱情。</p><p>我甚至有时候感觉我自己长情到可怕。一个名字刻在心里十几年，我才活了多少岁。只是随着时间时间流逝，多年未见，已经与她没有任何交集了。我甚至开始怀疑，也许那只是我还小，不懂得爱慕和喜欢的区别。</p><p>我也觉得我不适合爱人。我懂啥，我啥也不懂。我能给予什么，我什么也给不了。我甚至为未来而迷茫。</p><p>爱乐之城真的很棒，梦想会一直伴随着你，爱人也许不会。</p><p>所以我觉得更应该去努力提升自己。</p><p>今天又是wrong answer了一个下午，日常自闭。但我很满足，很充实，我能感受到我在做有意义的事情。</p><p>就算是平庸如我，渺小如我，世间辽阔，也只一个。</p><p>这心头热火，唇间冰河，悉数无关我。</p><p>词不达意。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;p class=&quot;description&quot;&gt;&lt;/p&gt;&lt;br&gt;一看居然七夕了。&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lmf424.oss-cn-beijing.aliyuncs.com/56884409_p0.jpg&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="somethings" scheme="https://yuanfang.tech/categories/somethings/"/>
    
    
  </entry>
  
</feed>
